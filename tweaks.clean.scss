/* ==UserStyle==
@name Coolify Enhanced UI
@version 2.0.1
@namespace techwithanirudh
@updateURL https://github.com/techwithanirudh/coolify-tweaks/raw/main/tweaks.user.styl
@preprocessor stylus
@description Extra spacing, soft rounded corners, subtle shadows, and fully token-driven colour themes for Coolify.
@license MIT
==/UserStyle== */

// =============================================================================
// SCSS Configuration & Variables
// =============================================================================

// Base configuration
$spacing: 8px;
$font-stack: ('Inter', 'SF Pro Display', sans-serif);
$transition-speed: 0.18s;
$blur-amount: 14px;
$sidebar-width: 260px;

// Responsive breakpoints
$breakpoints: (
  'xs': 480px,
  'sm': 640px,
  'md': 768px,
  'lg': 1024px,
  'xl': 1280px,
  '2xl': 1536px
);

// Color system - organized by theme
$light-theme: (
  'base': #FFFFFF,
  'coolgray': (
    100: #F6F7F9, 200: #ECEEF2, 300: #E3E5EA, 400: #D8DAE0,
    500: #CFD1D8, 600: #C6C8D0, 700: #F4F5F7, 800: #EDEEF1, 900: #E6E7EB
  ),
  'coollabs': #4C3495,
  'semantic': (
    'success': #2AAA52,
    'warning': #E0B842,
    'error': #D63B3B
  ),
  'text': (
    'primary': #1F1C23,
    'muted': #6E6B75,
    'placeholder': #8E8C91
  )
);

$dark-theme: (
  'base': #1F1C23,
  'coolgray': (
    100: #26252B, 200: #2A292E, 300: #353239, 400: #3D3A40,
    500: #45424A, 600: #403D44, 700: #1A191F, 800: #151419, 900: #101014
  ),
  'coollabs': #7349F3,
  'semantic': (
    'success': #23FF1F,
    'warning': #FCD452,
    'error': #FF1F1C
  ),
  'text': (
    'primary': #FCFAFC,
    'muted': #8E8C91,
    'placeholder': #8E8C91
  )
);

// =============================================================================
// Utility Functions & Mixins
// =============================================================================

// Responsive mixin
@mixin respond-to($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media screen and (min-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  } @else {
    @warn "Unknown breakpoint: #{$breakpoint}";
  }
}

// Generate theme colors helper
@mixin generate-theme-colors($theme) {
  @each $category, $colors in $theme {
    @if type-of($colors) == map {
      @each $shade, $color in $colors {
        --color-#{$category}-#{$shade}: #{$color};
      }
    } @else {
      --color-#{$category}: #{$colors};
    }
  }
}

// Card styling mixin
@mixin card-base($padding: 0.65rem 0.75rem) {
  overflow: hidden;
  padding: $padding;
  border: 1px solid var(--color-coolgray-400);
  border-radius: var(--radius-sm);
  background: var(--cfy-card);
  transition: all $transition-speed ease;
}

// Hover effects
@mixin hover-lift {
  &:hover {
    border-color: var(--cfy-accent);
    background: color-mix(in srgb, var(--cfy-card) 70%, var(--cfy-accent) 30%);
    box-shadow: 0 8px 24px var(--color-shadow-dark);
    transform: translateY(-2px);
  }
}

// Button base styles
@mixin button-base($bg: var(--cfy-accent), $color: var(--color-base)) {
  padding: 0.55rem 1rem;
  border: 1px solid var(--color-coolgray-400);
  border-radius: var(--radius-sm);
  background: $bg;
  color: $color;
  font-weight: 600;
  transition: background $transition-speed ease;
  cursor: pointer;

  &:hover {
    background: var(--cfy-accent-light);
  }

  &:focus-visible {
    outline: 2px solid var(--cfy-accent);
    outline-offset: 2px;
  }
}

// Input base styles
@mixin input-base {
  padding: 0.55rem 1rem;
  border: 1px solid var(--color-coolgray-400);
  border-radius: var(--radius-sm);
  background: var(--cfy-card);
  color: var(--cfy-text);
  transition: border-color 0.15s ease, background 0.15s ease;

  &:focus {
    border-color: var(--cfy-accent-light);
    background: var(--cfy-card-container);
    outline: none;
  }

  &::placeholder {
    color: var(--cfy-muted);
    opacity: 0.7;
  }

  &:focus::placeholder {
    opacity: 0.5;
  }

  &:focus-visible {
    outline: 2px solid var(--cfy-accent);
    outline-offset: 2px;
  }
}

// Custom scrollbar
@mixin custom-scrollbar($width: 8px) {
  &::-webkit-scrollbar {
    width: $width;
    height: $width;
  }

  &::-webkit-scrollbar-thumb {
    border-radius: calc(#{$width} / 2);
    background: var(--cfy-muted);

    &:hover {
      background: var(--cfy-text);
    }
  }

  &::-webkit-scrollbar-track {
    background: transparent;
  }
}

// Typography helper
@mixin heading($size: 1rem, $weight: 700, $line-height: 1.25) {
  color: var(--cfy-text);
  font: $weight #{$size} / #{$line-height} #{$font-stack};
}

// =============================================================================
// Placeholder Selectors (for code reuse)
// =============================================================================

%reset-defaults {
  border: none;
  border-radius: var(--radius-sm);
  box-shadow: none;
}

%container-base {
  overflow: hidden;
  margin-top: 0.65rem;
  padding: 0.75rem 0.85rem;
  border-radius: var(--radius-md);
  background: var(--cfy-card-container);
}

%media-element {
  overflow: hidden;
  border-radius: var(--radius-sm);
  filter: none;
  opacity: 1;
}

// =============================================================================
// Main Document Styles
// =============================================================================

@-moz-document url-prefix("*://coolify.local/*"), url-prefix("https://app.coolify.io/*") {
  
  // CSS Custom Properties
  :root {
    // Generate light theme colors
    @include generate-theme-colors($light-theme);
    
    // Color mix functions
    --color-coollabs-100: color-mix(in srgb, #{map-get($light-theme, 'coollabs')} 85%, #FFFFFF);
    
    // Shadow system
    --color-overlay: rgba(0, 0, 0, 0.6);
    --color-shadow-light: rgba(0, 0, 0, 0.15);
    --color-shadow-dark: rgba(0, 0, 0, 0.35);
    --color-shadow-main: rgba(0, 0, 0, 0.25);

    // Typography
    font-size: 15px;
    
    // Semantic color mappings
    --cfy-accent: var(--color-coollabs);
    --cfy-accent-light: var(--color-coollabs-100);
    --cfy-sidebar-bg: var(--color-coolgray-700);
    --cfy-secondary: var(--color-coolgray-100);
    --cfy-content-bg: var(--color-base);
    --cfy-card-container: var(--color-coolgray-200);
    --cfy-card: var(--color-coolgray-300);
    --cfy-text: var(--color-text-primary);
    --cfy-muted: var(--color-text-muted);
    
    // Layout system
    --cfy-blur: #{$blur-amount};
    --cfy-shadow: 0 4px 20px var(--color-shadow-main);
    --cfy-sidebar-w: #{$sidebar-width};
    
    // Border radius scale
    --radius-base: 14px;
    --radius-step: 2px;
    --radius-xs: calc(var(--radius-base) - (var(--radius-step) * 2));
    --radius-sm: calc(var(--radius-base) - var(--radius-step));
    --radius-md: var(--radius-base);
    --radius-lg: calc(var(--radius-base) + var(--radius-step));
    --radius-xl: calc(var(--radius-base) + (var(--radius-step) * 2));
  }

  // Dark theme override
  .dark {
    @include generate-theme-colors($dark-theme);
    --color-coollabs-100: color-mix(in srgb, #{map-get($dark-theme, 'coollabs')} 75%, #FFFFFF);
  }

  // =============================================================================
  // Global Reset & Base Styles
  // =============================================================================
  
  body, .box, .card, .menu-item, button, a, input, select, textarea {
    @extend %reset-defaults;
  }

  body, main {
    background: var(--cfy-content-bg);
    color: var(--cfy-text);
  }

  // =============================================================================
  // Sidebar Component
  // =============================================================================
  
  // Sidebar container
  [class*='lg:flex'][class*='lg:w-56'] {
    width: var(--cfy-sidebar-w);
  }

  // Navigation container
  nav[class*='dark:border-coolgray-200'] {
    overflow-x: hidden;
    overflow-y: auto;
    width: 100%;
    border-right: 1px solid var(--color-coolgray-400);
    background: var(--cfy-sidebar-bg);
    backdrop-filter: blur(var(--cfy-blur));
    -webkit-backdrop-filter: blur(var(--cfy-blur));
    scrollbar-width: thin;
    scrollbar-color: var(--cfy-accent) transparent;
    @include custom-scrollbar;

    // Nested structure
    > ul {
      padding-inline: calc(#{$spacing} * 2);
    }

    > div[class*='px-2 pt-2 pb-7'] {
      padding-block: calc(#{$spacing} * 4);
    }

    ul li ul li {
      overflow: hidden;
      border-radius: var(--radius-sm);
    }
  }

  // Menu items
  .menu-item {
    display: flex;
    align-items: center;
    padding: 0.55rem 0.9rem;
    border-radius: var(--radius-sm);
    color: var(--cfy-muted);
    font-weight: 500;
    transition: background $transition-speed ease, color $transition-speed ease;
    gap: 0.6rem;

    &:focus-visible {
      outline: 2px solid var(--cfy-accent);
      outline-offset: 2px;
    }

    &:hover,
    &:focus,
    &.menu-item-active,
    &[aria-current] {
      background: var(--cfy-card-container);
      color: var(--cfy-text);
    }

    svg {
      flex-shrink: 0;
      width: 20px;
      height: 20px;
      stroke-width: 1.6;
      fill: var(--color-coolgray-600);
    }
  }

  // Responsive sidebar behavior
  @media (max-width: 1023px) {
    aside[class*='sidebar'] {
      position: fixed;
      z-index: 60;
      transition: transform 0.25s ease;
      transform: translateX(calc(-1 * var(--cfy-sidebar-w)));
      inset: 0;
    }

    body.sidebar-open {
      aside {
        transform: none;
      }

      &::after {
        position: fixed;
        z-index: 50;
        background: var(--color-overlay);
        content: '';
        inset: 0;
      }
    }
  }

  @include respond-to(lg) {
    body:has(nav[class*='dark:border-coolgray-200']) main {
      padding-left: var(--cfy-sidebar-w);
    }
  }

  // =============================================================================
  // Top Navigation Component
  // =============================================================================
  
  .navbar-main {
    position: sticky;
    top: 0;
    z-index: 45;
    padding: 0.45rem 0.85rem;
    border: 1px solid var(--color-coolgray-400);
    border-radius: var(--radius-sm);
    background: var(--cfy-sidebar-bg);
    backdrop-filter: blur(var(--cfy-blur));
    -webkit-backdrop-filter: blur(var(--cfy-blur));

    nav {
      display: flex;
      align-items: center;
      padding-top: 0;
      gap: 0.8rem;
      @include custom-scrollbar(0); // Hide scrollbar

      a {
        padding: 0.3rem;
        border-radius: 10px;
        color: var(--cfy-muted);
        font-weight: 600;
        cursor: pointer;
        transition: background $transition-speed ease, color $transition-speed ease;

        &:focus-visible {
          outline: 2px solid var(--cfy-accent);
          outline-offset: 2px;
        }

        &:hover,
        &:focus {
          color: var(--cfy-text);
        }

        &[class*='dark:text-white'],
        &[aria-current='page'] {
          box-shadow: inset 0 0 0 2px var(--cfy-accent-light);
          color: var(--cfy-text);
        }
      }
    }

    .flex-1 {
      flex: 1 1 auto;
    }
  }

  // =============================================================================
  // Cards & Grid System
  // =============================================================================
  
  // Content containers
  section > h2 + div,
  section > h3 + div,
  [data-testid='resources-grid'],
  .grid[class*='cols'] {
    @extend %container-base;
  }

  // Grid system with responsive behavior
  .grid[class*='cols'] {
    gap: 0.65rem;

    // Target specific grid types using better selectors
    $grid-selectors: (
      '[wire\\:click*="navigate"]',
      '[x-show*="filtered"]',
      '[\\@click*="navigate"]'
    );

    // Apply to each grid type
    @each $selector in $grid-selectors {
      &:has(#{$selector}) {
        grid-template-columns: repeat(1, minmax(0, 1fr));

        // Responsive breakpoints
        @include respond-to(sm) {
          grid-template-columns: repeat(2, minmax(0, 1fr));
        }

        @include respond-to(lg) {
          grid-template-columns: repeat(3, minmax(0, 1fr));
        }

        @include respond-to(2xl) {
          grid-template-columns: repeat(4, minmax(0, 1fr));
        }

        .box {
          height: 150px;

          > div,
          div {
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
          }
        }
      }
    }

    // Server grids remain single column
    &:has([href*='/server/']) {
      grid-template-columns: repeat(1, minmax(0, 1fr));
    }
  }

  // Empty state containers
  section:has(> div > div:only-child) > div > div:only-child {
    padding: 1.25rem;
    border-radius: var(--radius-sm);
    background: var(--cfy-card-container);
    color: var(--cfy-muted);
    text-align: center;
  }

  // Card components
  .box,
  .box-without-bg {
    @include card-base;
    @include hover-lift;
  }

  // Badge sizing
  .badge-dashboard,
  .badge {
    width: calc(#{$spacing} * 3.5);
    height: calc(#{$spacing} * 3.5);
  }

  // Dashed containers
  [dashed],
  [class*='dashed'] {
    border-color: var(--cfy-muted);
    border-radius: var(--radius-sm);
    padding-block: 2rem;
  }

  // Table row styling
  [role='row']:not([dashed]) {
    padding: 0.6rem 0.8rem;
    border-radius: var(--radius-sm);
    background: var(--cfy-card);
  }

  // =============================================================================
  // Typography System
  // =============================================================================
  
  h1 { @include heading(2.1rem, 700, 1.25); }
  h2 { @include heading(1.5rem, 700, 1.35); }
  h3 { @include heading(1.25rem, 700, 1.35); }
  h4 { @include heading(1.1rem, 700, 1.35); }

  .subtitle {
    color: var(--cfy-muted);
    font-size: 0.95rem;
  }

  .box-title {
    font-weight: 600;
    font-size: 1.05rem;
    // Multi-line text truncation
    display: -webkit-box;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: normal;
    word-break: break-word;
    -webkit-line-clamp: 4;
    line-clamp: 4;
    -webkit-box-orient: vertical;
  }

  .box-description {
    color: var(--cfy-muted);
  }

  // =============================================================================
  // Interactive Elements (Buttons & Forms)
  // =============================================================================
  
  // Primary buttons
  .button,
  button.button {
    @include button-base;
  }

  // Light mode text color fix
  html:not(.dark) {
    .button,
    button.button {
      color: var(--color-base);
    }
  }

  // Secondary buttons
  .secondary,
  button.secondary {
    @include button-base(var(--cfy-secondary), var(--cfy-text));

    &:hover {
      background: var(--cfy-card-container);
    }
  }

  // Form inputs
  .input,
  input.input,
  textarea.input,
  select.select {
    @include input-base;
  }

  // Checkbox and radio buttons
  input[type='checkbox'],
  input[type='radio'] {
    padding: 0.7rem;
    border-radius: 4px;
    background-color: var(--cfy-card);
    transition: background $transition-speed ease;
  }

  label {
    margin-bottom: 0.75rem;
    font-weight: 600;
  }

  // =============================================================================
  // Enhanced Select Dropdown
  // =============================================================================
  
  select {
    appearance: base-select;

    &:hover,
    &:focus {
      border-color: var(--cfy-accent-light);
      background: var(--cfy-card-container);
    }

    &::picker-icon {
      color: var(--cfy-muted);
      transition: 0.4s rotate ease;
    }

    &:open::picker-icon {
      rotate: 180deg;
    }
  }

  ::picker(select) {
    border: 1px solid var(--color-coolgray-400);
    border-radius: var(--radius-xs);
    background: var(--cfy-card);
    opacity: 0;
    transition: all 0.4s allow-discrete;
    top: calc(anchor(bottom) + 4px);

    &:popover-open {
      opacity: 1;
    }
  }

  @starting-style {
    ::picker(select):popover-open {
      opacity: 0;
    }
  }

  option {
    display: flex;
    justify-content: flex-start;
    padding: 10px;
    background: var(--cfy-card);
    color: var(--cfy-text);
    transition: 0.4s ease;
    gap: 20px;

    &:first-of-type {
      border-radius: var(--radius-xs) var(--radius-xs) 0 0;
    }

    &:last-of-type {
      border-radius: 0 0 var(--radius-xs) var(--radius-xs);
    }

    &:not(:last-of-type) {
      border-bottom: none;
    }

    &:hover,
    &:focus {
      background: var(--cfy-card-container);
      color: var(--cfy-text);
    }

    &:checked {
      font-weight: bold;
    }

    &::checkmark {
      order: 1;
      margin-left: auto;
      content: '✓';
    }

    .icon {
      font-size: 1.6rem;
      text-box: trim-both cap alphabetic;
    }
  }

  selectedcontent .icon {
    display: none;
  }

  // =============================================================================
  // UI Feedback & Animations
  // =============================================================================
  
  // Toast notifications
  ul[x-data] li > span {
    border: 1px solid var(--color-coolgray-400);
    background: var(--cfy-card);
    font-family: $font-stack;
    backdrop-filter: blur(var(--cfy-blur));
  }

  @keyframes wiggle {
    0%, 100% { transform: rotate(0); }
    25% { transform: rotate(-3deg); }
    75% { transform: rotate(3deg); }
  }

  .toast-no-description svg[fill='currentColor'] {
    animation: wiggle 0.6s ease;
  }

  // Popup styling
  [x-show='popups.sponsorship'] {
    padding: 1.25rem;
    border-radius: var(--radius-sm);
    background: var(--cfy-card-container);
    box-shadow: var(--cfy-shadow);
  }

  // =============================================================================
  // Scrollbars & Global Utilities
  // =============================================================================
  
  // Global scrollbar styling
  * {
    @include custom-scrollbar;
  }

  // Utility classes
  .rounded-sm,
  form,
  div[class*='shadow-lg lg:border-t dark:border-coolgray-300'] {
    border-radius: var(--radius-sm);
  }

  // Layout helpers
  .flex {
    &.gap-2,
    &.items-center.gap-4,
    &.flex-col.gap-4 {
      > :is(h1, h2, h3, h4) {
        margin-right: auto;
      }
    }
  }

  // Specific component adjustments
  div[class='flex items-center gap-2'] > h3,
  section > h3[class='pb-2'] {
    font-size: 1.6rem;
  }

  div[class='flex flex-col gap-4 max-w-2xl'] {
    max-width: none;
  }

  // Dark mode input override
  input.dark\\:bg-coolgray-100:where(.dark, .dark *) {
    padding: 0.7rem;
    border-radius: 4px;
    background-color: var(--cfy-card);
    transition: background $transition-speed ease;
  }

  // =============================================================================
  // Width & Spacing Utilities
  // =============================================================================
  
  // Width utilities using loop for maintainability
  $width-classes: ('w-48', 'w-64', 'w-32', 'pt-2 w-96', 'w-96', 'md:w-96');
  
  @each $class in $width-classes {
    div[class='#{$class}'],
    div[class*='#{$class}'] {
      width: 100%;
    }
  }

  div[class*='flex flex-col gap-2'] {
    gap: calc(#{$spacing} * 4);
  }

  // Link styling
  a[class*='hover:underline']:hover {
    color: var(--cfy-muted);
    text-decoration: none;
  }

  // =============================================================================
  // Content & Media Elements
  // =============================================================================
  
  // Table styling
  table {
    overflow: hidden;
    margin-top: calc(#{$spacing} * 4);
    border-radius: var(--radius-sm);
    background: var(--cfy-card-container);
  }

  // Media element styling
  img[class*='w-[4.5rem] aspect-square h-[4.5rem]'],
  svg[class*='w-[4.5rem] aspect-square h-[4.5rem]'],
  div[class*='w-[4.5rem] aspect-square h-[4.5rem]'] {
    @extend %media-element;
  }

  // =============================================================================
  // Layout & Page Structure
  // =============================================================================
  
  main {
    height: 100svh;

    > div[class*='p-4 sm:px-6 lg:px-8 lg:py-6'] {
      margin: auto;
      max-width: 1280px;
      padding-block: calc(#{$spacing} * 18);
    }
  }

  // Info boxes and containers
  div[class*='p-4 border dark:border-coolgray-300'] {
    margin-top: calc(#{$spacing} * 4);
    padding: calc(#{$spacing} * 4) calc(#{$spacing} * 6);
    border-radius: var(--radius-sm);
    background: var(--cfy-card-container);
  }

  // Page width control
  body > div[data-page-width] {
    min-width: 100%;
    max-width: 100%;
  }

  // =============================================================================
  // Component Specific Fixes
  // =============================================================================
  
  // Theme dropdown - using semantic selector
  [data-theme-dropdown] {
    border-radius: 10px;
    background: var(--cfy-card);
    padding-block: 0.7rem;
  }

  // Dark mode hover utility
  .dark-hover\\:bg-none {
    &:hover {
      background: none;
      color: var(--cfy-text);
    }
  }

  // Tag styling
  .add-tag {
    color: var(--cfy-muted);
  }

  // =============================================================================
  // UI Element Hiding (Improved Approach)
  // =============================================================================
  
  // Primary approach: Use data attributes for better semantic meaning
  [data-ui-hide],
  [data-color-controls],
  [data-width-controls],
  [data-zoom-controls] {
    display: none !important;
  }

  // Fallback approach for existing markup
  div.font-bold.border-b {
    &[data-ui-section="color"],
    &[data-ui-section="width"],
    &[data-ui-section="zoom"] {
      display: none !important;
    }
  }

  // Additional button hiding
  button[class*="switch"],
  button[class*="zoom"],
  button[data-action*="width"],
  button[data-action*="zoom"] {
    display: none !important;
  }

  // Generic UI control hiding
  .ui-control {
    &[data-type="color"],
    &[data-type="width"], 
    &[data-type="zoom"] {
      display: none !important;
    }
  }
}
